{
  "contracts": {
    "Agic": {
      "address": "0x8b9D33Bd628c313B72ba6C81A5F358959Fb89EAD",
      "constructorCode": "608060405234801561001057600080fd5b506154c6806100206000396000f3fe",
      "bodyBytecodeHash": "56fa11f5b8357fad4a7f8a41ff38ec662ef4cea65e9d5e57d9defda0601d5861",
      "localBytecodeHash": "893c6e38b99afa07402a405f55682bc90b69a8deaa0d63b4808381cf3dc33fc2",
      "deployedBytecodeHash": "893c6e38b99afa07402a405f55682bc90b69a8deaa0d63b4808381cf3dc33fc2",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_array:44<t_uint256>": {
          "id": "t_array:44<t_uint256>",
          "valueType": "t_uint256",
          "length": "44",
          "kind": "array",
          "label": "uint256[44]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_array:49<t_uint256>": {
          "id": "t_array:49<t_uint256>",
          "valueType": "t_uint256",
          "length": "49",
          "kind": "array",
          "label": "uint256[49]"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 49,
          "type": "t_bool",
          "src": "757:24:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 51,
          "type": "t_bool",
          "src": "876:25:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 116,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:1"
        },
        {
          "contract": "ContextUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
          "label": "__gap",
          "astId": 43,
          "type": "t_array:50<t_uint256>",
          "src": "1277:25:0"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 553,
          "type": "t_mapping<t_uint256>",
          "src": "1481:46:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_allowances",
          "astId": 559,
          "type": "t_mapping<t_uint256>",
          "src": "1534:69:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 561,
          "type": "t_uint256",
          "src": "1610:28:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_name",
          "astId": 563,
          "type": "t_string",
          "src": "1645:20:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_symbol",
          "astId": 565,
          "type": "t_string",
          "src": "1671:22:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_decimals",
          "astId": 567,
          "type": "t_uint8",
          "src": "1699:23:6"
        },
        {
          "contract": "ERC20UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "__gap",
          "astId": 1062,
          "type": "t_array:44<t_uint256>",
          "src": "11053:25:6"
        },
        {
          "contract": "OwnableUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "label": "_owner",
          "astId": 128,
          "type": "t_address",
          "src": "651:22:2"
        },
        {
          "contract": "OwnableUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "label": "__gap",
          "astId": 246,
          "type": "t_array:49<t_uint256>",
          "src": "2434:25:2"
        },
        {
          "contract": "Agic",
          "path": "contracts/Agic.sol",
          "label": "_totalPledgeEth",
          "astId": 3631,
          "type": "t_uint256",
          "src": "352:31:19"
        },
        {
          "contract": "Agic",
          "path": "contracts/Agic.sol",
          "label": "_aaveContract",
          "astId": 3635,
          "type": "t_mapping<t_address>",
          "src": "417:41:19"
        },
        {
          "contract": "Agic",
          "path": "contracts/Agic.sol",
          "label": "_fundPool",
          "astId": 3637,
          "type": "t_address",
          "src": "465:25:19"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": [
          {
            "action": "append",
            "updated": {
              "index": 15,
              "contract": "Agic",
              "path": "contracts/Agic.sol",
              "label": "_fundPool",
              "astId": 3637,
              "type": "t_address",
              "src": "465:25:19"
            }
          }
        ]
      }
    },
    "AgicEquityCard": {
      "address": "0x4Cea85b56bcac577b5e28407af173D5c35D46868",
      "constructorCode": "608060405234801561001057600080fd5b50614dff806100206000396000f3fe",
      "bodyBytecodeHash": "6e12a88ce00a971afb1a073c5d444585d5e7bf500903090cb8f3219cd1f00554",
      "localBytecodeHash": "576f035d89bfa6ac58e8cb38aad672cc2bc96a499f1e69306013f544249a959c",
      "deployedBytecodeHash": "576f035d89bfa6ac58e8cb38aad672cc2bc96a499f1e69306013f544249a959c",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_array:49<t_uint256>": {
          "id": "t_array:49<t_uint256>",
          "valueType": "t_uint256",
          "length": "49",
          "kind": "array",
          "label": "uint256[49]"
        },
        "t_struct<EnumerableSet.UintSet>": {
          "id": "t_struct<EnumerableSet.UintSet>",
          "kind": "struct",
          "label": "EnumerableSet.UintSet",
          "members": [
            {
              "label": "_inner",
              "astId": 3165,
              "type": "t_struct<EnumerableSet.Set>",
              "src": "6247:10:16"
            }
          ]
        },
        "t_struct<EnumerableSet.Set>": {
          "id": "t_struct<EnumerableSet.Set>",
          "kind": "struct",
          "label": "EnumerableSet.Set",
          "members": [
            {
              "label": "_values",
              "astId": 2872,
              "type": "t_array:dyn<t_bytes32>",
              "src": "1213:17:16"
            },
            {
              "label": "_indexes",
              "astId": 2876,
              "type": "t_mapping<t_uint256>",
              "src": "1364:37:16"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_array:dyn<t_bytes32>": {
          "id": "t_array:dyn<t_bytes32>",
          "valueType": "t_bytes32",
          "length": "dyn",
          "kind": "array",
          "label": "bytes32[]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<EnumerableSet.UintSet>>": {
          "id": "t_mapping<t_struct<EnumerableSet.UintSet>>",
          "valueType": "t_struct<EnumerableSet.UintSet>",
          "label": "mapping(key => EnumerableSet.UintSet)",
          "kind": "mapping"
        },
        "t_struct<EnumerableMap.UintToAddressMap>": {
          "id": "t_struct<EnumerableMap.UintToAddressMap>",
          "kind": "struct",
          "label": "EnumerableMap.UintToAddressMap",
          "members": [
            {
              "label": "_inner",
              "astId": 2690,
              "type": "t_struct<EnumerableMap.Map>",
              "src": "5962:10:15"
            }
          ]
        },
        "t_struct<EnumerableMap.Map>": {
          "id": "t_struct<EnumerableMap.Map>",
          "kind": "struct",
          "label": "EnumerableMap.Map",
          "members": [
            {
              "label": "_entries",
              "astId": 2422,
              "type": "t_array:dyn<t_struct<EnumerableMap.MapEntry>>",
              "src": "1355:19:15"
            },
            {
              "label": "_indexes",
              "astId": 2426,
              "type": "t_mapping<t_uint256>",
              "src": "1524:37:15"
            }
          ]
        },
        "t_struct<EnumerableMap.MapEntry>": {
          "id": "t_struct<EnumerableMap.MapEntry>",
          "kind": "struct",
          "label": "EnumerableMap.MapEntry",
          "members": [
            {
              "label": "_key",
              "astId": 2416,
              "type": "t_bytes32",
              "src": "1243:12:15"
            },
            {
              "label": "_value",
              "astId": 2418,
              "type": "t_bytes32",
              "src": "1265:14:15"
            }
          ]
        },
        "t_array:dyn<t_struct<EnumerableMap.MapEntry>>": {
          "id": "t_array:dyn<t_struct<EnumerableMap.MapEntry>>",
          "valueType": "t_struct<EnumerableMap.MapEntry>",
          "length": "dyn",
          "kind": "array",
          "label": "EnumerableMap.MapEntry[]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_array:41<t_uint256>": {
          "id": "t_array:41<t_uint256>",
          "valueType": "t_uint256",
          "length": "41",
          "kind": "array",
          "label": "uint256[41]"
        },
        "t_struct<Counters.Counter>": {
          "id": "t_struct<Counters.Counter>",
          "kind": "struct",
          "label": "Counters.Counter",
          "members": [
            {
              "label": "_value",
              "astId": 2370,
              "type": "t_uint256",
              "src": "1024:14:14"
            }
          ]
        },
        "t_address_payable": {
          "id": "t_address_payable",
          "kind": "elementary",
          "label": "address payable"
        },
        "t_struct<AgicEquityCard.Map>": {
          "id": "t_struct<AgicEquityCard.Map>",
          "kind": "struct",
          "label": "AgicEquityCard.Map",
          "members": [
            {
              "label": "value",
              "astId": 4188,
              "type": "t_array:dyn<t_struct<AgicEquityCard.Token>>",
              "src": "520:13:20"
            },
            {
              "label": "_indexes",
              "astId": 4192,
              "type": "t_mapping<t_uint256>",
              "src": "543:36:20"
            }
          ]
        },
        "t_struct<AgicEquityCard.Token>": {
          "id": "t_struct<AgicEquityCard.Token>",
          "kind": "struct",
          "label": "AgicEquityCard.Token",
          "members": [
            {
              "label": "id",
              "astId": 4236,
              "type": "t_uint256",
              "src": "910:10:20"
            },
            {
              "label": "cardType",
              "astId": 4238,
              "type": "t_uint8",
              "src": "930:14:20"
            },
            {
              "label": "phase",
              "astId": 4240,
              "type": "t_uint256",
              "src": "976:13:20"
            }
          ]
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_array:dyn<t_struct<AgicEquityCard.Token>>": {
          "id": "t_array:dyn<t_struct<AgicEquityCard.Token>>",
          "valueType": "t_struct<AgicEquityCard.Token>",
          "length": "dyn",
          "kind": "array",
          "label": "AgicEquityCard.Token[]"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 49,
          "type": "t_bool",
          "src": "757:24:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 51,
          "type": "t_bool",
          "src": "876:25:1"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 116,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:1"
        },
        {
          "contract": "ContextUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
          "label": "__gap",
          "astId": 43,
          "type": "t_array:50<t_uint256>",
          "src": "1277:25:0"
        },
        {
          "contract": "ERC165UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
          "label": "_supportedInterfaces",
          "astId": 263,
          "type": "t_mapping<t_bool>",
          "src": "546:52:3"
        },
        {
          "contract": "ERC165UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
          "label": "__gap",
          "astId": 320,
          "type": "t_array:49<t_uint256>",
          "src": "1841:25:3"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_holderTokens",
          "astId": 1190,
          "type": "t_mapping<t_struct<EnumerableSet.UintSet>>",
          "src": "1211:64:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_tokenOwners",
          "astId": 1192,
          "type": "t_struct<EnumerableMap.UintToAddressMap>",
          "src": "1339:51:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_tokenApprovals",
          "astId": 1196,
          "type": "t_mapping<t_address>",
          "src": "1446:52:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_operatorApprovals",
          "astId": 1202,
          "type": "t_mapping<t_bool>",
          "src": "1553:73:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_name",
          "astId": 1204,
          "type": "t_string",
          "src": "1651:20:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_symbol",
          "astId": 1206,
          "type": "t_string",
          "src": "1698:22:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_tokenURIs",
          "astId": 1210,
          "type": "t_mapping<t_string>",
          "src": "1766:45:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "_baseURI",
          "astId": 1212,
          "type": "t_string",
          "src": "1834:23:8"
        },
        {
          "contract": "ERC721UpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
          "label": "__gap",
          "astId": 2118,
          "type": "t_array:41<t_uint256>",
          "src": "22505:25:8"
        },
        {
          "contract": "OwnableUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "label": "_owner",
          "astId": 128,
          "type": "t_address",
          "src": "651:22:2"
        },
        {
          "contract": "OwnableUpgradeSafe",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "label": "__gap",
          "astId": 246,
          "type": "t_array:49<t_uint256>",
          "src": "2434:25:2"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_tokenIds",
          "astId": 4246,
          "type": "t_struct<Counters.Counter>",
          "src": "1084:34:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_agicFundPool",
          "astId": 4248,
          "type": "t_address_payable",
          "src": "1125:37:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_lastSettlement",
          "astId": 4250,
          "type": "t_uint256",
          "src": "1197:28:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_tokens",
          "astId": 4252,
          "type": "t_struct<AgicEquityCard.Map>",
          "src": "1232:19:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_phase",
          "astId": 4254,
          "type": "t_uint256",
          "src": "1258:22:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_cardInterest",
          "astId": 4258,
          "type": "t_mapping<t_uint256>",
          "src": "1308:47:20"
        },
        {
          "contract": "AgicEquityCard",
          "path": "contracts/AgicEquityCard.sol",
          "label": "_numberOfCard",
          "astId": 4262,
          "type": "t_mapping<t_uint8>",
          "src": "1457:45:20"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "ERC721UpgradeSafe",
            "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
            "label": "_holderTokens",
            "astId": 1190,
            "type": "t_mapping<t_struct<EnumerableSet.UintSet>>",
            "src": "1211:64:8"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
            "label": "_tokenOwners",
            "astId": 1192,
            "type": "t_struct<EnumerableMap.UintToAddressMap>",
            "src": "1339:51:8"
          },
          {
            "contract": "AgicEquityCard",
            "path": "contracts/AgicEquityCard.sol",
            "label": "_tokenIds",
            "astId": 4246,
            "type": "t_struct<Counters.Counter>",
            "src": "1084:34:20"
          },
          {
            "contract": "AgicEquityCard",
            "path": "contracts/AgicEquityCard.sol",
            "label": "_tokens",
            "astId": 4252,
            "type": "t_struct<AgicEquityCard.Map>",
            "src": "1232:19:20"
          }
        ],
        "storageDiff": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "agic/Agic": [
      {
        "address": "0xd91F96035Ee446917eA020Fc2d96cD6f2162bf56",
        "version": "1.0.0",
        "implementation": "0x8b9D33Bd628c313B72ba6C81A5F358959Fb89EAD",
        "admin": "0x2046f2F0392430498dd768E3bA3C8270853F3d50",
        "kind": "Upgradeable"
      }
    ],
    "agic/AgicFundPool": [
      {
        "address": "0x6f93ed39b3ec8a20501ac1922d85c70c4a24bff3",
        "kind": "NonProxy",
        "bytecodeHash": "1e5d89a4ae783f03d4c98f4e037ccd3e4e6f6c6e5803e517db6030df4a075010"
      }
    ],
    "agic/AgicEquityCard": [
      {
        "address": "0x36C4B51785659bB8c82329863016A9591C415823",
        "version": "1.0.0",
        "implementation": "0x7b98d78607db43210Fd29623a4265Ce02170C353",
        "admin": "0x2046f2F0392430498dd768E3bA3C8270853F3d50",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x2046f2F0392430498dd768E3bA3C8270853F3d50"
  }
}
